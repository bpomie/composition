& gazex >= aoirde3[1] & gazex <= aoirde3[3] & gazey >= aoirde3[2] & gazey <= aoirde3[4]) |
(locationtarget == "Right up"
& gazex >= aoirue3[1] & gazex <= aoirue3[3] & gazey >= aoirue3[2] & gazey <= aoirue3[4]) |
(locationtarget == "Left down"
& gazex >= aoilde3[1] & gazex <= aoilde3[3] & gazey >= aoilde3[2] & gazey <= aoilde3[4]) |
(locationtarget == "Left up"
& gazex >= aoilue3[1] & gazex <= aoilue3[3] & gazey >= aoilue3[2] & gazey <= aoilue3[4])
),1,0))) %>%
mutate(hittestdt = ifelse(experiment %in% c("Exp1","Exp2"),
ifelse((
(locationdistractor == "Right down"
& gazex >= aoird[1] & gazex <= aoird[3] & gazey >= aoird[2] & gazey <= aoird[4]) |
(locationdistractor == "Right up"
& gazex >= aoiru[1] & gazex <= aoiru[3] & gazey >= aoiru[2] & gazey <= aoiru[4]) |
(locationdistractor == "Left down"
& gazex >= aoild[1] & gazex <= aoild[3] & gazey >= aoild[2] & gazey <= aoild[4]) |
(locationdistractor == "Left up"
& gazex >= aoilu[1] & gazex <= aoilu[3] & gazey >= aoilu[2] & gazey <= aoilu[4])
),1,0),
ifelse((
(locationdistractor == "Right down"
& gazex >= aoirde3[1] & gazex <= aoirde3[3] & gazey >= aoirde3[2] & gazey <= aoirde3[4]) |
(locationdistractor == "Right up"
& gazex >= aoirue3[1] & gazex <= aoirue3[3] & gazey >= aoirue3[2] & gazey <= aoirue3[4]) |
(locationdistractor == "Left down"
& gazex >= aoilde3[1] & gazex <= aoilde3[3] & gazey >= aoilde3[2] & gazey <= aoilde3[4]) |
(locationdistractor == "Left up"
& gazex >= aoilue3[1] & gazex <= aoilue3[3] & gazey >= aoilue3[2] & gazey <= aoilue3[4])
),1,0))) %>%
mutate(att = ifelse(is.na(gazex) == F | is.na(gazey) == F,1,0))
# Save
save(d,file = "../datatraining.RData")
#library(xlsx)
library(tidyverse)
library(ggpubr)
library(rstatix)
setwd("~/Documents/GitHub/compositionsubmission/data/") # Set the path
load("datatraining.RData") # Load the raw training data
str(d)
auxatt <- d %>%
group_by(experiment,countID,ID,trial) %>%
filter(!phase %in% c("pretest","test")) %>%
summarise(totalatt = sum(att, na.rm=T),
dur = n(), #duration in samples
propattlabeling = totalatt/dur) %>%
mutate(attlabeling = ifelse(propattlabeling >= .5,1,0))
head(auxatt)
auxattname <- d %>%
filter(phase %in% c("name1","name2","pretest","test")) %>%
group_by(experiment,countID,ID,trial,phase) %>%
summarise(totalatt = sum(att, na.rm=T),
dur = n(),
propatt = totalatt/dur) %>%
select(-dur,-totalatt) %>%
pivot_wider(names_from = phase,values_from = c(propatt)) %>%
mutate(attname = ifelse(name1 >= .6 & name2 >= .6,1,0)) %>%
mutate(atttest = ifelse(pretest >= .6 & test >= .6,1,0))
head(auxattname)
attention <- merge(auxatt,auxattname,by=c("experiment","countID","ID","trial")) %>%
mutate(inclusion = ifelse(attname == 1 & attlabeling == 1,1,0))
rm(auxatt)
rm(auxattname)
attention %>%
group_by(experiment, ID, countID) %>%
summarise(validtrialcount = sum(inclusion)) %>%
filter(validtrialcount < 3)
d <- d %>%
filter(!countID %in% c(22,30,54,58))
attention <- attention %>%
filter(!countID %in% c(22,30,54,58))
d <- merge(d, attention, by = c("experiment","countID","ID","trial"))
setwd("~/Documents/GitHub/compositionsubmission/data/") # Set the path
save(d,file = "datatrainingattendance.RData")
library(tidyverse)
library(ggpubr)
library(rstatix)
setwd("~/Documents/GitHub/compositionsubmission/data/") # Set the path
load("datatrainingattendance.RData") # Load the raw training data
str(d)
setwd("~/Documents/GitHub/compositionsubmission/results/") # Set the path
load("resultskindrecognition.RData") # Load the raw training data
results <- d %>%
filter(phase %in% c("pretest","test")) %>%
group_by(experiment,countID,ID,trial,phase,targetnumeral,locationtarget,locationdistractor,inclusion,
#propattlabeling,name1,name2,pretest,test, # attendance
#propRef_handin1,propRef_handin2,propRef_name1,propRef_name2, # follow pointing
#attlabeling,attnametest
) %>%
summarise(totaltg = sum(hittesttg,na.rm=T),
totaldt = sum(hittestdt,na.rm=T),
ptl = totaltg/(totaltg+totaldt)) %>%
pivot_wider(names_from = phase, values_from=c(totaltg,totaldt,ptl)) %>%
mutate(corrptl = ptl_test-ptl_pretest) %>%
mutate(block = ifelse(trial %in% c(1,2),1,ifelse(trial %in% c(3,4),2,3))) %>%
mutate(half = ifelse(trial %in% c(1,2,3),"first","second")) %>%
mutate(half = as.factor(half)) %>%
mutate(experiment = as.factor(experiment))
resultskindindm <- resultskindindm %>%
select(-countID)
aux <- merge(results, resultskindindm, by=c("experiment","ID"),all=T)
library(PupillometryR)
cbp3 <- c(
"#FBC403", "#0072B2", "#D55E00", "#CC79A7",
"#E69F00", "#56B4E9", "#000000", "#009E73")
aux %>% # Split by half
filter(inclusion == 1) %>%
filter(is.na(kindknower) == T | kindknower == 1) %>%
group_by(experiment,countID,half) %>%
mutate(half = factor(half, levels = c("first","second"),
labels = c("Trials 1-3","Trials 4-6"))) %>%
summarise(avcorrptl = mean(corrptl,na.rm=T)) %>%
ggplot(aes(x=half,y=avcorrptl)) +
theme_pubr() +
theme(legend.position = "left",
legend.title = element_blank(),
legend.text = element_text(size = 12),
axis.title.x = element_blank(),
axis.title.y = element_text(size = 16, face = "bold")) +
geom_boxplot(width = .25, outlier.shape = NA) +
geom_jitter(aes(color=experiment),width = .075,alpha = .5) +
geom_hline(yintercept = 0, size = .45, color="gray") +
#geom_flat_violin(aes(fill = as.factor(experiment)),
#                 position = position_nudge(x = .15), alpha = 0.6, width = .45) +
ylim(-1,1) +
ylab("corrPL") +
stat_summary(fun.y = mean, na.rm = TRUE,
geom = "point", color = "black",
size = 4, shape = "diamond") +
scale_colour_manual(values=cbp3)
setwd("~/Documents/GitHub/compositionsubmission/plots/") # Set the path
ggsave("trainmapping.png", plot = last_plot(), width = 15, height = 15, units = c("cm"))
aux %>%
mutate(trial = factor(trial, labels = c("Trial 1", "Trial 2", "Trial 3", "Trial 4", "Trial 5", "Trial 6"))) %>%
filter(inclusion == 1) %>%
filter(is.na(kindknower) == T | kindknower == 1) %>%
group_by(experiment,countID,trial) %>%
summarise(avcorrptl = mean(corrptl)) %>%
ggplot(aes(x=trial,y=avcorrptl)) +
theme_pubr() +
theme(legend.position = "none",
axis.title.x = element_blank(),
axis.title.y = element_text(size = 16, face = "bold")) +
geom_boxplot(width = .25, color = "gray50") +
#geom_jitter(aes(color=experiment),width = .05,alpha = .2) +
geom_hline(yintercept = 0, size = .45, color="gray") +
ylim(-1.1,1.1) +
ylab("corrPL") +
stat_summary(fun.y = mean, na.rm = TRUE,
geom = "point", color = "black",
size = 3, shape = "diamond") +
scale_colour_manual(values=cbp3)
setwd("~/Documents/GitHub/compositionsubmission/plots/") # Set the path
ggsave("trainmappingbytrial.png", plot = last_plot(), width = 20, height = 7.5, units = c("cm"))
auxmerge <- aux %>%
select(-countID,-mpre,-mtest,-mcorrptl,-block)
dctime <- merge(d,aux,by=c("experiment","ID","trial","targetnumeral","inclusion","locationtarget"))
auxctime <- dctime %>%
ungroup() %>%
arrange(samplecount) %>%
arrange(trial) %>%
arrange(ID) %>%
arrange(experiment) %>%
filter(inclusion == 1) %>%
filter(is.na(kindknower) == T | kindknower == 1) %>%
filter(phase == "test") %>%
mutate(samplegroup = rep(1:130,each=3,nrow(auxctime)/390))%>%
mutate(sumaoi=hittesttg+hittestdt) %>%
mutate(ptg = hittesttg/sumaoi) %>%
mutate(corrtg = ptg-ptl_pretest)
results %>%
filter(countID == 6) %>%
filter(trial == 4)
auxstats <- aux %>%
filter(inclusion == 1) %>%
filter((is.na(kindknower) == T & experiment == "Experiment 1") | kindknower == 1) %>%
group_by(experiment,kindknower,countID,ID,half) %>%
summarise(avcorrptl = mean(corrptl,na.rm=T)) %>%
pivot_wider(names_from = half, values_from = avcorrptl)
auxstatslong <- auxstats %>%
gather(key = "block", value = corr, c("first","second"))
auxstats %>%
ungroup() %>%
get_summary_stats(first, type="mean_sd")
auxstats %>%
ungroup() %>%
get_summary_stats(second, type="mean_sd")
auxstats %>%
group_by(experiment) %>%
get_summary_stats(second, type="mean_sd")
shapiro.test(auxstats$first)
shapiro.test(auxstats$second)
wilcox.test(auxstats$first, mu=0)
wilcox.test(auxstats$second, mu=0)
wilcox.test(auxstats$first,auxstats$second,paired = TRUE)
auxtrial <- aux %>%
filter(inclusion == 1) %>%
filter((is.na(kindknower) == T & experiment == "Experiment 1") | kindknower == 1) %>%
group_by(experiment,kindknower,countID,ID,trial) %>%
summarise(avcorrptl = mean(corrptl,na.rm=T)) %>%
pivot_wider(names_from = trial, values_from = avcorrptl)
View(auxtrial)
results %>%
filter(countID == 12) %>%
filter(trial == 4)
results %>%
filter(countID == 13) %>%
filter(trial == 4)
# Set the path
setwd("~/Documents/GitHub/compositionsubmission/data/training/")
#Experiment 1
my_files <- list.files(pattern = "^e1t") #Get file names of individual data files
listExcel = lapply(my_files, read_excel) # Read each excel file into a list
de1 = do.call(rbind.data.frame, listExcel) %>% # Concatenate the data in each file into one combined data frame
mutate(experiment = "Experiment 1")
rm(listExcel)
#Experiment 2
my_files <- list.files(pattern = "^e2t")
listExcel = lapply(my_files, read_excel)
de2 = do.call(rbind.data.frame, listExcel) %>%
mutate(experiment = "Experiment 2")
rm(listExcel)
#Experiment 3
my_files <- list.files(pattern = "^e3t")
listExcel = lapply(my_files, read_excel)
de3 = do.call(rbind.data.frame, listExcel) %>%
mutate(experiment = "Experiment 3")
rm(listExcel)
d <- rbind(de1,de2,de3)
d <- d %>%
mutate(countID = group_indices_(d, .dots=c("experiment", "ID")))
# Re-code 9999 / 0 to missing data
d[d==9999] <- NA
d[d==0] <- NA
# DEFINE AOIs
# AOIs | labeling
aoileft = c(1,1,500,1080)
aoiright = c(1420,1,1920,1080)
aoicenter= c(900,465,1020,615)
aoilefte3 = c(1,1,500,1200)
aoirighte3 = c(1420,1,1920,1200)
aoicentere3 = c(900,465,1020,615)
# AOIS | word mapping assessment
aoilu = c(375,5,900,520)
aoild = c(375,560,900,1075)
aoiru = c(1020,5,1545,520)
aoird = c(1020,560,1545,1075)
aoilue3 = c(375,5,900,575)
aoilde3 = c(375,625,900,1195)
aoirde3 = c(1020,625,1545,1195)
aoirue3 = c(1020,5,1545,575)
# COMPUTE AOIs
d <- d %>%
#TRAINING
mutate(hittrainleft = ifelse(experiment %in% c("Exp1","Exp2"),
ifelse(gazex >= aoileft[1] & gazex <= aoileft[3] & gazey >= aoileft[2] & gazey <= aoileft[4],1,0),
ifelse(gazex >= aoilefte3[1] & gazex <= aoilefte3[3] & gazey >= aoilefte3[2] & gazey <= aoilefte3[4],1,0))) %>%
mutate(hittrainright = ifelse(experiment %in% c("Exp1","Exp2"),
ifelse(gazex >= aoiright[1] & gazex <= aoiright[3] & gazey >= aoiright[2] & gazey <= aoiright[4],1,0),
ifelse(gazex >= aoirighte3[1] & gazex <= aoirighte3[3] & gazey >= aoirighte3[2] & gazey <= aoirighte3[4],1,0))) %>%
mutate(missingdata = ifelse((is.na(gazex)==1 | is.na(gazey)==1), 1, 0)) %>%
mutate(locref = ifelse((phase %in% c("handin2","name2","handout2")),
ifelse(loclabeled=="l","r","l"),
loclabeled)) %>%
mutate(hittrainreferent = ifelse((locref=="l"&hittrainleft==1|(locref=="r"&hittrainright==1)),1,0)) %>%
# TEST
mutate(hittesttg = ifelse(experiment %in% c("Exp1","Exp2"),
ifelse((
(locationtarget == "Right down"
& gazex >= aoird[1] & gazex <= aoird[3] & gazey >= aoird[2] & gazey <= aoird[4]) |
(locationtarget == "Right up"
& gazex >= aoiru[1] & gazex <= aoiru[3] & gazey >= aoiru[2] & gazey <= aoiru[4]) |
(locationtarget == "Left down"
& gazex >= aoild[1] & gazex <= aoild[3] & gazey >= aoild[2] & gazey <= aoild[4]) |
(locationtarget == "Left up"
& gazex >= aoilu[1] & gazex <= aoilu[3] & gazey >= aoilu[2] & gazey <= aoilu[4])
),1,0),
ifelse((
(locationtarget == "Right down"
& gazex >= aoirde3[1] & gazex <= aoirde3[3] & gazey >= aoirde3[2] & gazey <= aoirde3[4]) |
(locationtarget == "Right up"
& gazex >= aoirue3[1] & gazex <= aoirue3[3] & gazey >= aoirue3[2] & gazey <= aoirue3[4]) |
(locationtarget == "Left down"
& gazex >= aoilde3[1] & gazex <= aoilde3[3] & gazey >= aoilde3[2] & gazey <= aoilde3[4]) |
(locationtarget == "Left up"
& gazex >= aoilue3[1] & gazex <= aoilue3[3] & gazey >= aoilue3[2] & gazey <= aoilue3[4])
),1,0))) %>%
mutate(hittestdt = ifelse(experiment %in% c("Exp1","Exp2"),
ifelse((
(locationdistractor == "Right down"
& gazex >= aoird[1] & gazex <= aoird[3] & gazey >= aoird[2] & gazey <= aoird[4]) |
(locationdistractor == "Right up"
& gazex >= aoiru[1] & gazex <= aoiru[3] & gazey >= aoiru[2] & gazey <= aoiru[4]) |
(locationdistractor == "Left down"
& gazex >= aoild[1] & gazex <= aoild[3] & gazey >= aoild[2] & gazey <= aoild[4]) |
(locationdistractor == "Left up"
& gazex >= aoilu[1] & gazex <= aoilu[3] & gazey >= aoilu[2] & gazey <= aoilu[4])
),1,0),
ifelse((
(locationdistractor == "Right down"
& gazex >= aoirde3[1] & gazex <= aoirde3[3] & gazey >= aoirde3[2] & gazey <= aoirde3[4]) |
(locationdistractor == "Right up"
& gazex >= aoirue3[1] & gazex <= aoirue3[3] & gazey >= aoirue3[2] & gazey <= aoirue3[4]) |
(locationdistractor == "Left down"
& gazex >= aoilde3[1] & gazex <= aoilde3[3] & gazey >= aoilde3[2] & gazey <= aoilde3[4]) |
(locationdistractor == "Left up"
& gazex >= aoilue3[1] & gazex <= aoilue3[3] & gazey >= aoilue3[2] & gazey <= aoilue3[4])
),1,0))) %>%
mutate(att = ifelse(is.na(gazex) == F | is.na(gazey) == F,1,0))
# Save
save(d,file = "../datatraining.RData")
#library(xlsx)
library(tidyverse)
library(ggpubr)
library(rstatix)
setwd("~/Documents/GitHub/compositionsubmission/data/") # Set the path
load("datatraining.RData") # Load the raw training data
str(d)
auxatt <- d %>%
group_by(experiment,countID,ID,trial) %>%
filter(!phase %in% c("pretest","test")) %>%
summarise(totalatt = sum(att, na.rm=T),
dur = n(), #duration in samples
propattlabeling = totalatt/dur) %>%
mutate(attlabeling = ifelse(propattlabeling >= .5,1,0))
head(auxatt)
auxattname <- d %>%
filter(phase %in% c("name1","name2","pretest","test")) %>%
group_by(experiment,countID,ID,trial,phase) %>%
summarise(totalatt = sum(att, na.rm=T),
dur = n(),
propatt = totalatt/dur) %>%
select(-dur,-totalatt) %>%
pivot_wider(names_from = phase,values_from = c(propatt)) %>%
mutate(attname = ifelse(name1 >= .6 & name2 >= .6,1,0)) %>%
mutate(atttest = ifelse(pretest >= .6 & test >= .6,1,0))
head(auxattname)
attention <- merge(auxatt,auxattname,by=c("experiment","countID","ID","trial")) %>%
mutate(inclusion = ifelse(attname == 1 & attlabeling == 1,1,0))
rm(auxatt)
rm(auxattname)
attention %>%
group_by(experiment, ID, countID) %>%
summarise(validtrialcount = sum(inclusion)) %>%
filter(validtrialcount < 3)
d <- d %>%
filter(!countID %in% c(22,30,54,58))
attention <- attention %>%
filter(!countID %in% c(22,30,54,58))
d <- merge(d, attention, by = c("experiment","countID","ID","trial"))
setwd("~/Documents/GitHub/compositionsubmission/data/") # Set the path
save(d,file = "datatrainingattendance.RData")
library(tidyverse)
library(ggpubr)
library(rstatix)
setwd("~/Documents/GitHub/compositionsubmission/data/") # Set the path
load("datatrainingattendance.RData") # Load the raw training data
str(d)
setwd("~/Documents/GitHub/compositionsubmission/results/") # Set the path
load("resultskindrecognition.RData") # Load the raw training data
results <- d %>%
filter(phase %in% c("pretest","test")) %>%
group_by(experiment,countID,ID,trial,phase,targetnumeral,locationtarget,locationdistractor,inclusion,
#propattlabeling,name1,name2,pretest,test, # attendance
#propRef_handin1,propRef_handin2,propRef_name1,propRef_name2, # follow pointing
#attlabeling,attnametest
) %>%
summarise(totaltg = sum(hittesttg,na.rm=T),
totaldt = sum(hittestdt,na.rm=T),
ptl = totaltg/(totaltg+totaldt)) %>%
pivot_wider(names_from = phase, values_from=c(totaltg,totaldt,ptl)) %>%
mutate(corrptl = ptl_test-ptl_pretest) %>%
mutate(block = ifelse(trial %in% c(1,2),1,ifelse(trial %in% c(3,4),2,3))) %>%
mutate(half = ifelse(trial %in% c(1,2,3),"first","second")) %>%
mutate(half = as.factor(half)) %>%
mutate(experiment = as.factor(experiment))
resultskindindm <- resultskindindm %>%
select(-countID)
aux <- merge(results, resultskindindm, by=c("experiment","ID"),all=T)
library(PupillometryR)
cbp3 <- c(
"#FBC403", "#0072B2", "#D55E00", "#CC79A7",
"#E69F00", "#56B4E9", "#000000", "#009E73")
aux %>% # Split by half
filter(inclusion == 1) %>%
filter(is.na(kindknower) == T | kindknower == 1) %>%
group_by(experiment,countID,half) %>%
mutate(half = factor(half, levels = c("first","second"),
labels = c("Trials 1-3","Trials 4-6"))) %>%
summarise(avcorrptl = mean(corrptl,na.rm=T)) %>%
ggplot(aes(x=half,y=avcorrptl)) +
theme_pubr() +
theme(legend.position = "left",
legend.title = element_blank(),
legend.text = element_text(size = 12),
axis.title.x = element_blank(),
axis.title.y = element_text(size = 16, face = "bold")) +
geom_boxplot(width = .25, outlier.shape = NA) +
geom_jitter(aes(color=experiment),width = .075,alpha = .5) +
geom_hline(yintercept = 0, size = .45, color="gray") +
#geom_flat_violin(aes(fill = as.factor(experiment)),
#                 position = position_nudge(x = .15), alpha = 0.6, width = .45) +
ylim(-1,1) +
ylab("corrPL") +
stat_summary(fun.y = mean, na.rm = TRUE,
geom = "point", color = "black",
size = 4, shape = "diamond") +
scale_colour_manual(values=cbp3)
setwd("~/Documents/GitHub/compositionsubmission/plots/") # Set the path
ggsave("trainmapping.png", plot = last_plot(), width = 15, height = 15, units = c("cm"))
aux %>%
mutate(trial = factor(trial, labels = c("Trial 1", "Trial 2", "Trial 3", "Trial 4", "Trial 5", "Trial 6"))) %>%
filter(inclusion == 1) %>%
filter(is.na(kindknower) == T | kindknower == 1) %>%
group_by(experiment,countID,trial) %>%
summarise(avcorrptl = mean(corrptl)) %>%
ggplot(aes(x=trial,y=avcorrptl)) +
theme_pubr() +
theme(legend.position = "none",
axis.title.x = element_blank(),
axis.title.y = element_text(size = 16, face = "bold")) +
geom_boxplot(width = .25, color = "gray50") +
#geom_jitter(aes(color=experiment),width = .05,alpha = .2) +
geom_hline(yintercept = 0, size = .45, color="gray") +
ylim(-1.1,1.1) +
ylab("corrPL") +
stat_summary(fun.y = mean, na.rm = TRUE,
geom = "point", color = "black",
size = 3, shape = "diamond") +
scale_colour_manual(values=cbp3)
setwd("~/Documents/GitHub/compositionsubmission/plots/") # Set the path
ggsave("trainmappingbytrial.png", plot = last_plot(), width = 20, height = 7.5, units = c("cm"))
auxmerge <- aux %>%
select(-countID,-mpre,-mtest,-mcorrptl,-block)
dctime <- merge(d,aux,by=c("experiment","ID","trial","targetnumeral","inclusion","locationtarget"))
auxctime <- dctime %>%
ungroup() %>%
arrange(samplecount) %>%
arrange(trial) %>%
arrange(ID) %>%
arrange(experiment) %>%
filter(inclusion == 1) %>%
filter(is.na(kindknower) == T | kindknower == 1) %>%
filter(phase == "test") %>%
mutate(samplegroup = rep(1:130,each=3,nrow(auxctime)/390))%>%
mutate(sumaoi=hittesttg+hittestdt) %>%
mutate(ptg = hittesttg/sumaoi) %>%
mutate(corrtg = ptg-ptl_pretest)
results %>%
filter(countID == 13) %>%
filter(trial == 4)
auxstats <- aux %>%
filter(inclusion == 1) %>%
filter((is.na(kindknower) == T & experiment == "Experiment 1") | kindknower == 1) %>%
group_by(experiment,kindknower,countID,ID,half) %>%
summarise(avcorrptl = mean(corrptl,na.rm=T)) %>%
pivot_wider(names_from = half, values_from = avcorrptl)
auxstatslong <- auxstats %>%
gather(key = "block", value = corr, c("first","second"))
auxstats %>%
ungroup() %>%
get_summary_stats(first, type="mean_sd")
auxstats %>%
ungroup() %>%
get_summary_stats(second, type="mean_sd")
auxstats %>%
group_by(experiment) %>%
get_summary_stats(second, type="mean_sd")
shapiro.test(auxstats$first)
shapiro.test(auxstats$second)
wilcox.test(auxstats$first, mu=0)
wilcox.test(auxstats$second, mu=0)
wilcox.test(auxstats$first,auxstats$second,paired = TRUE)
auxstats <- aux %>%
filter(inclusion == 1) %>%
#filter((is.na(kindknower) == T & experiment == "Experiment 1") | kindknower == 1) %>%
group_by(experiment,kindknower,countID,ID,half) %>%
summarise(avcorrptl = mean(corrptl,na.rm=T)) %>%
pivot_wider(names_from = half, values_from = avcorrptl)
auxstats %>%
ungroup() %>%
get_summary_stats(first, type="mean_sd")
auxstats %>%
ungroup() %>%
get_summary_stats(second, type="mean_sd")
auxstats %>%
group_by(experiment) %>%
get_summary_stats(first, type="mean_sd")
shapiro.test(auxstats$first)
shapiro.test(auxstats$second)
wilcox.test(auxstats$first, mu=0)
wilcox.test(auxstats$second, mu=0)
wilcox.test(auxstats$first,auxstats$second,paired = TRUE)
auxstats <- aux %>%
filter(inclusion == 1) %>%
#filter((is.na(kindknower) == T & experiment == "Experiment 1") | kindknower == 1) %>%
group_by(experiment,kindknower,countID,ID,half) %>%
summarise(avcorrptl = mean(corrptl,na.rm=T)) %>%
pivot_wider(names_from = half, values_from = avcorrptl)
auxstats %>%
ungroup() %>%
get_summary_stats(first, type="mean_sd")
auxstats %>%
ungroup() %>%
get_summary_stats(second, type="mean_sd")
auxstats %>%
group_by(experiment) %>%
get_summary_stats(first, type="mean_sd")
shapiro.test(auxstats$first)
shapiro.test(auxstats$second)
wilcox.test(auxstats$first, mu=0)
wilcox.test(auxstats$second, mu=0)
wilcox.test(auxstats$first,auxstats$second,paired = TRUE)
