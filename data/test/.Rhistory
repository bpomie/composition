& gazex >= aoild[1] & gazex <= aoild[3] & gazey >= aoild[2] & gazey <= aoild[4]) |
(locationdistractornumber == "Left up"
& gazex >= aoilu[1] & gazex <= aoilu[3] & gazey >= aoilu[2] & gazey <= aoilu[4])
),1,0)) %>%
mutate(dtkindhit = ifelse((
(locationdistractorkind == "Right down"
& gazex >= aoird[1] & gazex <= aoird[3] & gazey >= aoird[2] & gazey <= aoird[4]) |
(locationdistractorkind == "Right up"
& gazex >= aoiru[1] & gazex <= aoiru[3] & gazey >= aoiru[2] & gazey <= aoiru[4]) |
(locationdistractorkind == "Left down"
& gazex >= aoild[1] & gazex <= aoild[3] & gazey >= aoild[2] & gazey <= aoild[4]) |
(locationdistractorkind == "Left up"
& gazex >= aoilu[1] & gazex <= aoilu[3] & gazey >= aoilu[2] & gazey <= aoilu[4])
),1,0)) %>%
mutate(dtkunrelatedhit = ifelse((
((locationdistractorunrelated == "rightdown" | locationdistractorunrelated == "Right down")
& gazex >= aoird[1] & gazex <= aoird[3] & gazey >= aoird[2] & gazey <= aoird[4]) |
((locationdistractorunrelated == "rightup" | locationdistractorunrelated == "Right up")
& gazex >= aoiru[1] & gazex <= aoiru[3] & gazey >= aoiru[2] & gazey <= aoiru[4]) |
((locationdistractorunrelated == "leftdown" | locationdistractorunrelated == "Left down")
& gazex >= aoild[1] & gazex <= aoild[3] & gazey >= aoild[2] & gazey <= aoild[4]) |
((locationdistractorunrelated == "leftup" | locationdistractorunrelated == "Left up")
& gazex >= aoilu[1] & gazex <= aoilu[3] & gazey >= aoilu[2] & gazey <= aoilu[4])
),1,0)) %>%
mutate(centerhit = ifelse(
(gazex >= aoicenter[1] & gazex <= aoicenter[3] & gazey >= aoicenter[2] & gazey <= aoicenter[4]),
1,0)) %>%
mutate(att = ifelse(is.na(gazex) == F | is.na(gazey) == F,1,0))
# AOIs kind
dkind2 <- d2 %>%
filter(trial > 10) %>%
mutate(tghit = ifelse(
locationtarget == "right" & gazex >= aoikindr[1] & gazex <= aoikindr[3] & gazey >= aoikindr[2] & gazey <= aoikindr[4] |
locationtarget == "left" & gazex >= aoikindl[1] & gazex <= aoikindl[3] & gazey >= aoikindl[2] & gazey <= aoikindl[4],
1,0)) %>%
mutate(dtnumhit = ifelse(
locationdistractornumber == "right" & gazex >= aoikindr[1] & gazex <= aoikindr[3] & gazey >= aoikindr[2] & gazey <= aoikindr[4] |
locationdistractornumber == "left" & gazex >= aoikindl[1] & gazex <= aoikindl[3] & gazey >= aoikindl[2] & gazey <= aoikindl[4],
1,0 )) %>%
mutate(centerhit = ifelse(
(gazex >= aoicenter[1] & gazex <= aoicenter[3] & gazey >= aoicenter[2] & gazey <= aoicenter[4]),
1,0)) %>%
mutate(dtkindhit = NA) %>%
mutate(dtkunrelatedhit = NA) %>%
mutate(att = ifelse(is.na(gazex) == F | is.na(gazey) == F,1,0)) %>%
mutate(experiment = "Experiment 2")
save(dcompose,file = "../datateste2.RData")
# EXP3 ====
# Read in the data
setwd("~/Documents/GitHub/compositionsubmission/data/test/")
my_files <- list.files(pattern = "^e3_")
listExcel = lapply(my_files, read_excel)
d3 = do.call(rbind.data.frame, listExcel)
rm(listExcel)
# Recode 9999 / 0 to missing data
d3[d3==9999] <- NA
d3[d3==0] <- NA
d3 <- d3 %>%
mutate(ID = as.numeric(ID))
# Define AOIs
aoilu = c(375,5,900,575)
aoild = c(375,625,900,1195)
aoird = c(1020,625,1545,1195)
aoiru = c(1020,5,1545,575)
aoikindl = c(375,315,900,885)
aoikindr = c(1020,200,1545,880)
aoicenter= c(900,525,1020,675)
# AOIs Composition
dcompose <- d3 %>%
filter(trial < 11) %>%
mutate(tghit = ifelse((
(locationtarget == "Right down"
& gazex >= aoird[1] & gazex <= aoird[3] & gazey >= aoird[2] & gazey <= aoird[4]) |
(locationtarget == "Right up"
& gazex >= aoiru[1] & gazex <= aoiru[3] & gazey >= aoiru[2] & gazey <= aoiru[4]) |
(locationtarget == "Left down"
& gazex >= aoild[1] & gazex <= aoild[3] & gazey >= aoild[2] & gazey <= aoild[4]) |
(locationtarget == "Left up"
& gazex >= aoilu[1] & gazex <= aoilu[3] & gazey >= aoilu[2] & gazey <= aoilu[4])
),1,0)) %>%
mutate(dtnumhit = ifelse((
(locationdistractornumber == "Right down"
& gazex >= aoird[1] & gazex <= aoird[3] & gazey >= aoird[2] & gazey <= aoird[4]) |
(locationdistractornumber == "Right up"
& gazex >= aoiru[1] & gazex <= aoiru[3] & gazey >= aoiru[2] & gazey <= aoiru[4]) |
(locationdistractornumber == "Left down"
& gazex >= aoild[1] & gazex <= aoild[3] & gazey >= aoild[2] & gazey <= aoild[4]) |
(locationdistractornumber == "Left up"
& gazex >= aoilu[1] & gazex <= aoilu[3] & gazey >= aoilu[2] & gazey <= aoilu[4])
),1,0)) %>%
mutate(dtkindhit = ifelse((
(locationdistractorkind == "Right down"
& gazex >= aoird[1] & gazex <= aoird[3] & gazey >= aoird[2] & gazey <= aoird[4]) |
(locationdistractorkind == "Right up"
& gazex >= aoiru[1] & gazex <= aoiru[3] & gazey >= aoiru[2] & gazey <= aoiru[4]) |
(locationdistractorkind == "Left down"
& gazex >= aoild[1] & gazex <= aoild[3] & gazey >= aoild[2] & gazey <= aoild[4]) |
(locationdistractorkind == "Left up"
& gazex >= aoilu[1] & gazex <= aoilu[3] & gazey >= aoilu[2] & gazey <= aoilu[4])
),1,0)) %>%
mutate(dtkunrelatedhit = ifelse((
((locationdistractorunrelated == "rightdown" | locationdistractorunrelated == "Right down")
& gazex >= aoird[1] & gazex <= aoird[3] & gazey >= aoird[2] & gazey <= aoird[4]) |
((locationdistractorunrelated == "rightup" | locationdistractorunrelated == "Right up")
& gazex >= aoiru[1] & gazex <= aoiru[3] & gazey >= aoiru[2] & gazey <= aoiru[4]) |
((locationdistractorunrelated == "leftdown" | locationdistractorunrelated == "Left down")
& gazex >= aoild[1] & gazex <= aoild[3] & gazey >= aoild[2] & gazey <= aoild[4]) |
((locationdistractorunrelated == "leftup" | locationdistractorunrelated == "Left up")
& gazex >= aoilu[1] & gazex <= aoilu[3] & gazey >= aoilu[2] & gazey <= aoilu[4])
),1,0)) %>%
mutate(centerhit = ifelse(
(gazex >= aoicenter[1] & gazex <= aoicenter[3] & gazey >= aoicenter[2] & gazey <= aoicenter[4]),
1,0)) %>%
mutate(att = ifelse(is.na(gazex) == F | is.na(gazey) == F,1,0))
# AOIs kind
dkind3 <- d3 %>%
filter(trial > 10) %>%
mutate(tghit = ifelse(
locationtarget == "right" & gazex >= aoikindr[1] & gazex <= aoikindr[3] & gazey >= aoikindr[2] & gazey <= aoikindr[4] |
locationtarget == "left" & gazex >= aoikindl[1] & gazex <= aoikindl[3] & gazey >= aoikindl[2] & gazey <= aoikindl[4],
1,0)) %>%
mutate(dtnumhit = ifelse(
locationdistractornumber == "right" & gazex >= aoikindr[1] & gazex <= aoikindr[3] & gazey >= aoikindr[2] & gazey <= aoikindr[4] |
locationdistractornumber == "left" & gazex >= aoikindl[1] & gazex <= aoikindl[3] & gazey >= aoikindl[2] & gazey <= aoikindl[4],
1,0 )) %>%
mutate(centerhit = ifelse(
(gazex >= aoicenter[1] & gazex <= aoicenter[3] & gazey >= aoicenter[2] & gazey <= aoicenter[4]),
1,0)) %>%
mutate(dtkindhit = NA) %>%
mutate(dtkunrelatedhit = NA) %>%
mutate(att = ifelse(is.na(gazex) == F | is.na(gazey) == F,1,0)) %>%
mutate(experiment = "Experiment 3")
save(dcompose,file = "../datateste3.RData")
# KIND RECOGNITON ====
dkind <- rbind(dkind2,dkind3)
save(dkind, file = "../datacategoryrecognition.RData")
d %>%
filter(is.na(gazey == T))
d %>%
filter(gazex < 0 | gazey < 0)
d2 %>%
filter(is.na(gazey == T))
d2 %>%
filter(gazex < 0 | gazey < 0)
setwd("~/Documents/GitHub/compositionsubmission/data/test/")
# EXP1 ====
# Set the path
setwd('~/Documents/GitHub/compositionsubmission/data/test/')
#Get file names of individual data files
my_files <- list.files(pattern = "^e1_")
# Read each excel file into a list
listExcel = lapply(my_files, read_excel)
# Concatenate the data in each file into one combined data frame
d = do.call(rbind.data.frame, listExcel)
rm(listExcel)
d %>%
filter(is.na(gazey == T))
d %>%
filter(gazex < 0 | gazey < 0)
d %>%
filter(is.na(gazey == T))
d %>%
filter(gazex < 0 | gazey < 0)
setwd("~/Documents/GitHub/compositionsubmission/data/test/")
my_files <- list.files(pattern = "^e2_")
listExcel = lapply(my_files, read_excel)
d2 = do.call(rbind.data.frame, listExcel)
rm(listExcel)
d2 %>%
filter(is.na(gazey == T))
d2 %>%
filter(gazex < 0 | gazey < 0)
# Read in the data
setwd("~/Documents/GitHub/compositionsubmission/data/test/")
my_files <- list.files(pattern = "^e3_")
listExcel = lapply(my_files, read_excel)
d3 = do.call(rbind.data.frame, listExcel)
rm(listExcel)
d3 %>%
filter(is.na(gazey == T))
d3 %>%
filter(gazex < 0 | gazey < 0)
setwd("~/Documents/GitHub/compositionsubmission/data/") # Set the path
load("datatraining.RData") # Load the raw training data
setwd("~/Documents/GitHub/compositionsubmission/results/") # Set the path
load("resultskindrecognition.RData") # Load the raw training data
dtrain1 %>%
filter(is.na(gazex) == T) %>%
select(-kind,-targetnumeral,-trialtype,-locationdistractor)
dtrain1 <- d %>%
filter(experiment == "Experiment 1")
d2 <- d %>%
filter(experiment == "Experiment 2")
k2 <- resultskindindm %>%
filter(experiment == "Experiment 2") %>%
select(-countID)
dtrain2 <- merge(d2, k2, by=c("ID"),all=T)
d3 <- d %>%
filter(experiment == "Experiment 3")
k3 <- resultskindindm %>%
filter(experiment == "Experiment 3") %>%
select(-countID)
dtrain3 <- merge(d3, k3, by=c("ID"),all=T)
rm(d,d2,d3,resultskindindm,k2,k3)
dtrain1 %>%
filter(is.na(gazex) == T) %>%
select(-kind,-targetnumeral,-trialtype,-locationdistractor)
dtrain1 %>%
filter(gazex < 0 | gazey < 0)
dtrain1 %>%
filter(gazex > 1920 & gazex < 9999)
dtrain1 %>%
filter(gazey > 1080 & gazex < 9999)
dtrain1 %>%
filter(gazex < 0 | gazey < 0)
dtrain1 %>%
filter(gazex > 1920 & gazex < 9999)
dtrain1 %>%
filter(gazey > 1080 & gazex < 9999)
dtest1 %>%
filter(gazex < 0 | gazey < 0)
dtrain1 %>%
filter(sample == 1) %>%
group_by(setlabeled) %>%
summarise(count = n())
dtrain1 %>%
filter(sample == 1) %>%
group_by(loclabeled) %>%
summarise(count = n())
dtrain1 %>%
filter(sample == 1) %>%
group_by(setlabeled,loclabeled) %>%
summarise(count = n())
auxtrain1 <- dtrain1 %>%
filter(sample == 1) %>%
group_by(ID,trial,loclabeled,setlabeled) %>%
summarise(count = n()) %>%
pivot_wider(names_from = c(loclabeled,setlabeled), values_from = count) %>%
mutate(pairleft = sum(l_pair, r_single, na.rm = T))
auxtrain1 %>%
group_by(ID) %>%
summarise(totalpairleft = sum(pairleft)) %>%
filter(totalpairleft != 3)
dtrain1 %>%
filter(sample == 1) %>%
group_by(trial,loclabeled,setlabeled) %>%
summarise(count = n()) %>%
pivot_wider(names_from=c(loclabeled,setlabeled), values_from=count)
dtrain1 %>%
filter(samplecount == 1 & phase == "name1") %>%
filter(ID == 11) %>%
select(-locationdistractor,-locempty1,-locempty2,-locationtarget,-gazex,-gazey,-targetnumeral)
dtrain1 %>%
filter(sample == 1) %>%
group_by(ID,loclabeled,setlabeled) %>%
summarise(count = n()) %>%
pivot_wider(names_from = c(loclabeled,setlabeled), values_from = count) %>%
mutate(left = sum(l_pair, l_single, na.rm = T)) %>%
mutate(pair = sum(l_pair, r_pair, na.rm = T)) %>%
ungroup() %>%
summarise(sumleft = sum(left),
sumpair = sum(pair))
dtrain1 %>%
filter(sample == 1) %>%
group_by(kind) %>%
summarise(n())
dtrain1 %>%
group_by(experiment,locationtarget) %>%
filter(samplecount == 1 & phase == "test") %>%
summarise(n())
dtrain1 %>%
group_by(experiment,targetnumeral) %>%
filter(samplecount == 1 & phase == "test") %>%
summarise(n())
dtrain1 %>%
group_by(experiment,kind) %>%
filter(samplecount == 1 & phase == "test") %>%
summarise(n())
dtrain1 %>%
group_by(experiment,kind,targetnumeral) %>%
filter(samplecount == 1 & phase == "test") %>%
summarise(n())
dtrain2 %>%
filter(sample == 1) %>%
group_by(kindknower,loclabeled) %>%
summarise(count = n())
dtrain2 %>%
filter(sample == 1) %>%
group_by(kindknower,setlabeled,loclabeled) %>%
summarise(count = n())
auxtrain2 <- dtrain2 %>%
filter(sample == 1) %>%
#filter(kindknower == 1) %>%
group_by(ID,trial,loclabeled,setlabeled) %>%
summarise(count = n()) %>%
pivot_wider(names_from = c(loclabeled,setlabeled), values_from = count) %>%
mutate(pairleft = sum(l_pair, r_single, na.rm = T))
auxtrain2 %>%
group_by(ID) %>%
summarise(totalpairleft = sum(pairleft)) %>%
filter(totalpairleft != 3)
aux <- dtrain2 %>%
filter(sample == 1) %>%
group_by(ID,loclabeled,setlabeled) %>%
summarise(count = n()) %>%
pivot_wider(names_from = c(loclabeled,setlabeled), values_from = count) %>%
mutate(left = sum(l_pair, l_single, na.rm = T)) %>%
mutate(pair = sum(l_pair, r_pair, na.rm = T))
dtrain2 %>%
filter(samplecount == 1 & phase == "name1") %>%
filter(ID == 10) %>%
select(-locationdistractor,-locempty1,-locempty2,-locationtarget,-gazex,-gazey,-targetnumeral) %>%
arrange(trial)
dtrain2 %>%
filter(sample == 1) %>%
filter(kindknower == 1) %>%
group_by(trial,loclabeled,setlabeled) %>%
summarise(count = n()) %>%
pivot_wider(names_from=c(loclabeled,setlabeled), values_from=count)
aux <- dtrain2 %>%
filter(sample == 1) %>%
filter(kindknower == 1) %>%
group_by(ID,loclabeled,setlabeled) %>%
summarise(count = n()) %>%
pivot_wider(names_from = c(loclabeled,setlabeled), values_from = count) %>%
mutate(left = sum(l_pair, l_single, na.rm = T)) %>%
mutate(pair = sum(l_pair, r_pair, na.rm = T)) %>%
ungroup() %>%
summarise(sumleft = sum(left),
sumpair = sum(pair))
dtrain2 %>%
filter(ID == 10) %>%
filter(phase == "name1" | phase == "name2") %>%
ggplot(aes(x = gazex,y = gazey)) +
geom_point(aes(color = setlabeled)) +
facet_grid(trial ~ phase) +
xlim(1,2000) +
ylim(1,1200)
dtrain2 %>%
filter(sample == 1) %>%
group_by(kindknower,kind) %>%
summarise(n())
dtrain2 %>%
group_by(kindknower,locationtarget) %>%
filter(samplecount == 1 & phase == "test") %>%
summarise(n())
dtrain2 %>%
group_by(kindknower,targetnumeral) %>%
filter(samplecount == 1 & phase == "test") %>%
summarise(n())
dtrain2 %>%
group_by(kind) %>%
filter(samplecount == 1 & phase == "test") %>%
summarise(n())
dtrain2 %>%
group_by(kindknower,kind,targetnumeral) %>%
filter(samplecount == 1 & phase == "test") %>%
summarise(n())
dtrain3 %>%
filter(sample == 1) %>%
group_by(kindknower,loclabeled) %>%
summarise(count = n())
dtrain3 %>%
filter(sample == 1) %>%
group_by(kindknower,setlabeled,loclabeled) %>%
summarise(count = n())
auxind <- dtrain3 %>%
filter(sample == 1) %>%
group_by(kindknower,ID,trial,setlabeled,loclabeled) %>%
summarise(count = n())
aux <- dtrain3 %>%
filter(sample == 1) %>%
group_by(ID,kindknower,trial,loclabeled,setlabeled) %>%
summarise(count = n()) %>%
pivot_wider(names_from = c(loclabeled,setlabeled), values_from = count) %>%
mutate(pairleft = sum(l_pair, r_single, na.rm = T))
aux %>%
group_by(ID) %>%
summarise(totalpairleft = sum(pairleft)) %>%
filter(totalpairleft != 3)
dtrain3 %>%
group_by(locationtarget) %>%
filter(samplecount == 1 & phase == "test") %>%
summarise(n())
dtrain3 %>%
group_by(kindknower,targetnumeral) %>%
filter(samplecount == 1 & phase == "test") %>%
summarise(n())
dtrain3 %>%
group_by(kind) %>%
filter(samplecount == 1 & phase == "test") %>%
summarise(n())
dtrain3 %>%
group_by(kind,targetnumeral) %>%
filter(samplecount == 1 & phase == "test") %>%
summarise(n())
setwd("~/Documents/GitHub/compositionsubmission/data/") # Set the path
load("datateste1.RData") # Load the raw training data
dtest1 <- d
rm(d)
auxtrain <- dtrain1 %>%
filter(samplecount == 1) %>%
select(ID,trial,phase,kind,targetnumeral)
auxtest <- dtest1 %>%
filter(sample == 1) %>%
select(ID,trial,phase,kind,targetnumeral)
auxe1 <- rbind(auxtrain,auxtest)
auxe1 %>%
filter(phase == "test") %>%
arrange(trial) %>%
group_by(ID,kind) %>%
summarise(count = n()) %>%
filter(count != 2)
dtest1 %>%
filter(phase == "test") %>%
filter(sample == 1) %>%
group_by(kind) %>%
summarise(n())
aux <- dtest1 %>%
filter(phase == "test") %>%
filter(sample == 1) %>%
group_by(ID,kind) %>%
summarise(count = n()) %>%
pivot_wider(names_from = kind,values_from = count)
dtest1 %>%
filter(phase == "test") %>%
filter(sample == 1) %>%
group_by(ID,locationtarget) %>%
summarise(count = n()) %>%
pivot_wider(names_from = locationtarget,values_from = count)
dtest1 %>%
filter(sample == 1 & phase == "test") %>%
group_by(trial,targetnumeral) %>%
summarise(count = n())
dtest1 %>%
filter(trial == 7 & sample == 1 & phase == "test") %>%
group_by(kind) %>%
summarise(count = n())
dtest1 %>%
filter(trial == 7 & sample == 1 & phase == "test") %>%
group_by(locationtarget) %>%
summarise(count = n())
dtest1 %>%
filter(trial == 7 & sample == 1 & phase == "test") %>%
group_by(kind,targetnumeral) %>%
summarise(count = n())
dtest1 %>%
filter(trial == 7 & sample == 1 & phase == "test") %>%
group_by(targetnumeral) %>%
summarise(count = n())
setwd("~/Documents/GitHub/compositionsubmission/data/") # Set the path
load("datateste2.RData") # Load the raw training data
setwd("~/Documents/GitHub/compositionsubmission/results/") # Set the path
load("resultskindrecognition.RData") # Load the raw training data
resultskindindm <- resultskindindm %>%
filter(experiment == "Experiment 2") %>%
select(-countID)
dcompose2 <- merge(dcompose, resultskindindm, by=c("ID"),all=T)
rm(dcompose,resultskindindm)
dcompose2 %>%
filter(phase == "test") %>%
filter(sample == 1) %>%
filter(kindknower == 1) %>%
#filter(kindknower == 0 | is.na(kindknower) == 1) %>%
group_by(kind) %>%
summarise(n())
aux <- dcompose2 %>%
filter(phase == "test") %>%
filter(sample == 1) %>%
filter(kindknower == 1) %>%
#filter(kindknower == 0 | is.na(kindknower) == 1) %>%
group_by(ID,kind) %>%
summarise(count = n()) %>%
pivot_wider(names_from = kind,values_from = count)
dcompose2 %>%
filter(sample == 1 & phase == "test") %>%
filter(kindknower == 1) %>%
group_by(trial,targetnumeral) %>%
summarise(count = n())
dcompose2 %>%
filter(phase == "test") %>%
filter(sample == 1) %>%
group_by(kindknower,locationtarget) %>%
summarise(count = n())
dcompose2 %>%
filter(phase == "test") %>%
filter(sample == 1 & trial == 7) %>%
group_by(kindknower,locationtarget) %>%
summarise(count = n())
dcompose2 %>%
filter(phase == "test") %>%
filter(sample == 1) %>%
group_by(ID,locationdistractorunrelated) %>%
summarise(count = n())
dcompose2 %>%
filter(trial == 7 & sample == 1 & phase == "test") %>%
group_by(kind) %>%
summarise(count = n())
dcompose2 %>%
filter(trial == 7 & sample == 1 & phase == "test") %>%
group_by(locationtarget) %>%
summarise(count = n())
dcompose2 %>%
filter(trial == 7 & sample == 1 & phase == "test") %>%
group_by(kind,targetnumeral) %>%
summarise(count = n())
dcompose2 %>%
filter(trial == 7 & sample == 1 & phase == "test") %>%
group_by(kindknower,targetnumeral) %>%
summarise(count = n())
setwd("~/Documents/GitHub/compositionsubmission/data/") # Set the path
load("datateste3.RData") # Load the raw training data
